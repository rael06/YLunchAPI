name: Deploy

# Run this workflow every time a commit is pushed to main
on:
  push:
    branches:
      - master

jobs:
  sonar:
    name: Build for Sonar
    runs-on: windows-2022
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"YLunch_YLunchApi" /o:"ylunch-organization" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml /d:sonar.exclusions=**/obj/**,**/*.dll,**/Migrations/**,**/YLunchApi.Main/Program.cs
          dotnet build
          dotnet test --no-build --no-restore --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    needs: [sonar]
    name: Call Azure Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Azure Pipelines Action
        uses: Azure/pipelines@v1
        with:
          azure-devops-project-url: https://dev.azure.com/raelcalitro/YLunchAPI
          azure-pipeline-name: "YLunchAPI-CI"
          azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
